// Script para probar la funcionalidad de edici√≥n de art√≠culos
import fetch from 'node-fetch';

const API_BASE = 'http://localhost:3000/api';

async function testEditArticle() {
  console.log('üß™ Probando funcionalidad de edici√≥n de art√≠culos...\n');

  try {
    // 1. Obtener un art√≠culo existente para editar
    console.log('1. Obteniendo lista de art√≠culos...');
    const articlesResponse = await fetch(`${API_BASE}/admin/articles?userId=1`);
    
    if (!articlesResponse.ok) {
      console.log('‚ùå Error al obtener art√≠culos:', articlesResponse.status);
      return;
    }
    
    const articles = await articlesResponse.json();
    console.log('‚úÖ Obtenidos', articles.length, 'art√≠culos');
    
    if (articles.length === 0) {
      console.log('‚ùå No hay art√≠culos para probar');
      return;
    }
    
    const testArticle = articles[0];
    console.log('üìÑ Art√≠culo a editar:', testArticle.id, '-', testArticle.title);
    
    // 2. Probar actualizaci√≥n del art√≠culo
    console.log('\n2. Probando actualizaci√≥n...');
    
    const updateData = {
      ...testArticle,
      title: testArticle.title + ' (EDITADO)',
      description: testArticle.description + ' - Actualizado en ' + new Date().toLocaleString(),
      type: testArticle.type || 'proyecto'
    };
    
    console.log('üì§ Datos a enviar:', JSON.stringify(updateData, null, 2));
    
    const updateResponse = await fetch(`${API_BASE}/admin/articles/${testArticle.id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(updateData)
    });
    
    if (updateResponse.ok) {
      const updatedArticle = await updateResponse.json();
      console.log('‚úÖ Art√≠culo actualizado exitosamente');
      console.log('üìù T√≠tulo actualizado:', updatedArticle.title);
      console.log('üìù Descripci√≥n actualizada:', updatedArticle.description);
    } else {
      const errorText = await updateResponse.text();
      console.log('‚ùå Error al actualizar art√≠culo:', updateResponse.status);
      console.log('‚ùå Mensaje de error:', errorText);
    }
    
    // 3. Verificar que el cambio se guard√≥
    console.log('\n3. Verificando cambios...');
    const verifyResponse = await fetch(`${API_BASE}/articles/${testArticle.id}`);
    
    if (verifyResponse.ok) {
      const verifiedArticle = await verifyResponse.json();
      console.log('‚úÖ Verificaci√≥n exitosa');
      console.log('üìÑ T√≠tulo actual:', verifiedArticle.title);
      console.log('üìÑ Descripci√≥n actual:', verifiedArticle.description);
    } else {
      console.log('‚ùå Error al verificar:', verifyResponse.status);
    }
    
  } catch (error) {
    console.error('‚ùå Error en las pruebas:', error.message);
  }
}

// Ejecutar prueba
testEditArticle();
